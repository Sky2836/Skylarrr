game:GetService("StarterGui"):SetCore("SendNotification",{     
Title = "CREDITS",     
Text = "Made by Skylarr",
Button1 = "Ok.",
Duration = 20
})


if game.CoreGui:FindFirstChild("Library") then
    game.CoreGui:FindFirstChild("Library"):Destroy()
  end   
  local VLib = {RainbowColorValue = 0, HueSelectionPosition = 0}
  local UserInputService = game:GetService("UserInputService")
  local TweenService = game:GetService("TweenService")
  local RunService = game:GetService("RunService")
  local LocalPlayer = game:GetService("Players").LocalPlayer
  local Mouse = LocalPlayer:GetMouse()
  
  
  coroutine.wrap(
   function()
      while wait() do
         VLib.RainbowColorValue = VLib.RainbowColorValue + 1 / 255
         VLib.HueSelectionPosition = VLib.HueSelectionPosition + 1
  
         if VLib.RainbowColorValue >= 1 then
            VLib.RainbowColorValue = 0
         end
  
         if VLib.HueSelectionPosition == 80 then
            VLib.HueSelectionPosition = 0
         end
      end
   end
  )()
  
  local function MakeDraggable(topbarobject, object)
   local Dragging = nil
   local DragInput = nil
   local DragStart = nil
   local StartPosition = nil
  
   local function Update(input)
      local Delta = input.Position - DragStart
      local pos =
         UDim2.new(
            StartPosition.X.Scale,
            StartPosition.X.Offset + Delta.X,
            StartPosition.Y.Scale,
            StartPosition.Y.Offset + Delta.Y
         )
      local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
      Tween:Play()
   end
  
   topbarobject.InputBegan:Connect(
      function(input)
         if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPosition = object.Position
  
            input.Changed:Connect(
               function()
                  if input.UserInputState == Enum.UserInputState.End then
                     Dragging = false
                  end
               end
            )
         end
      end
   )
  
   topbarobject.InputChanged:Connect(
      function(input)
         if
            input.UserInputType == Enum.UserInputType.MouseMovement or
               input.UserInputType == Enum.UserInputType.Touch
         then
            DragInput = input
         end
      end
   )
  
   UserInputService.InputChanged:Connect(
      function(input)
         if input == DragInput and Dragging then
            Update(input)
         end
      end
   )
  end
  
  local Library = Instance.new("ScreenGui")
  Library.Name = "Library"
  Library.Parent =  game.CoreGui
  Library.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
  
  local uitoggled = false
  UserInputService.InputBegan:Connect(
   function(io, p)
      if io.KeyCode == Enum.KeyCode.RightControl then
         if uitoggled == false then
            Library.Enabled = false
            uitoggled = true
         else
            Library.Enabled = true
            uitoggled = false
         end
      end
   end
  )
  
  
  function VLib:Window(text, textgame, textcircle)
   local FirstTab = false
   local MainFrame = Instance.new("Frame")
   local TitleFrame = Instance.new("Frame")
   local MainTitle = Instance.new("TextLabel")
   local MainTitleUIGradient = Instance.new("UIGradient") 
   local GameTitle = Instance.new("TextLabel")
   local TabHolder = Instance.new("Frame")
   local TabHoldLayout = Instance.new("UIListLayout")
   local ContainerHold = Instance.new("Folder")
   local DragFrame = Instance.new("Frame")
   local Glow = Instance.new("ImageLabel")
  
   MainFrame.Name = "MainFrame"
   MainFrame.Parent = Library
   MainFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
   MainFrame.Position = UDim2.new(0, 320, 0, 50)
   MainFrame.Size = UDim2.new(0, 550, 0, 350)
   
   TitleFrame.Name = "TitleFrame"
   TitleFrame.Parent = MainFrame
   TitleFrame.BackgroundColor3 = Color3.fromRGB(0, 90, 90)
   TitleFrame.Position = UDim2.new(0, 1, 0, 0)
   TitleFrame.Size = UDim2.new(0, 548, 0, 40)

   local TitleFrameUIGradient = Instance.new("UIGradient")
   TitleFrameUIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 70, 70)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 250, 255))}
   TitleFrameUIGradient.Parent = TitleFrame
  
   MainTitle.Name = "MainTitle"
   MainTitle.Parent = TitleFrame
   MainTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
   MainTitle.BackgroundTransparency = 1.000
   MainTitle.Position = UDim2.new(0, 30, 0, 5)
   MainTitle.Size = UDim2.new(0, 100, 0, 30)
   MainTitle.Font = Enum.Font.Creepster
   MainTitle.Text = text
   MainTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
   MainTitle.TextSize = 32.000
   MainTitle.TextXAlignment = Enum.TextXAlignment.Center
   
   MainTitleUIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(80, 80, 80)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(250, 255, 255))}
   MainTitleUIGradient.Name = "MainTitleUIGradient"
   MainTitleUIGradient.Parent = MainTitle
  
   GameTitle.Name = "GameTitle"
   GameTitle.Parent = TitleFrame
   GameTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
   GameTitle.BackgroundTransparency = 1.000
   GameTitle.Position = UDim2.new(0, 160, 0, 5)
   GameTitle.Size = UDim2.new(0, 350, 0, 30)
   GameTitle.Font = Enum.Font.DenkOne
   GameTitle.Text = textgame
   GameTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
   GameTitle.TextSize = 20.000
   GameTitle.TextXAlignment = Enum.TextXAlignment.Center
   
   local TextToggle = Instance.new("TextButton")
   TextToggle.Name = "TextToggle"
   TextToggle.Parent = MainFrame
   TextToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
   TextToggle.BackgroundTransparency = 1.000
   TextToggle.Position = UDim2.new(0, 518, 0, 7)
   TextToggle.Size = UDim2.new(0, 27, 0, 27)
   TextToggle.Font = Enum.Font.Arial
   TextToggle.Text = "-"
   TextToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
   TextToggle.TextSize = 30.000
   TextToggle.TextXAlignment = Enum.TextXAlignment.Center
   TextToggle.MouseButton1Click:Connect(function()
       game.CoreGui.Library.MainFrame.Visible = false
   end)
   
   local ToggledFrame = Instance.new("Frame")
   ToggledFrame.Name = "ToggledFrame"
   ToggledFrame.Parent = Library
   ToggledFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
   ToggledFrame.BackgroundTransparency = 1.000
   ToggledFrame.Size = UDim2.new(0, 70, 0, 40)
   ToggledFrame.Position = UDim2.new(0, 190, 0, 90)
   
   local ToggledUICorner = Instance.new("UICorner")
   ToggledUICorner.CornerRadius = UDim.new(1, 100000)
   ToggledUICorner.Name = "ToggledUICorner"
   ToggledUICorner.Parent = ToggledButton
   
   local ToggledButton = Instance.new("TextButton")
   ToggledButton.Name = "ToggledButton"
   ToggledButton.Parent = ToggledFrame
   ToggledButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
   ToggledButton.BackgroundTransparency = 0
   ToggledButton.Size = UDim2.new(0, 70, 0, 40)
   ToggledButton.Font = Enum.Font.Creepster
   ToggledButton.Text = "MENU"
   ToggledButton.TextColor3 = Color3.fromRGB(170, 170, 179)
   ToggledButton.TextSize = 30.000
   ToggledButton.MouseButton1Click:Connect(function()
       game.CoreGui:FindFirstChild("Library").MainFrame.Visible = not game.CoreGui:FindFirstChild("Library").MainFrame.Visible
end)
   
   local ToggledButtonUIGradient = Instance.new("UIGradient")
   ToggledButtonUIGradient.Name = "ToggledButtonUIGradient"
   ToggledButtonUIGradient.Parent = ToggledButton
   ToggledButtonUIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 100, 100)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
                
  
   TabHolder.Name = "TabHolder"
   TabHolder.Parent = MainFrame
   TabHolder.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
   TabHolder.BackgroundTransparency = 0
   TabHolder.Position = UDim2.new(0, 3, 0, 45)
   TabHolder.Size = UDim2.new(0, 150, 0, 302)

   TabHoldLayout.Name = "TabHoldLayout"
   TabHoldLayout.Parent = TabHolder
   TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
   TabHoldLayout.Padding = UDim.new(0,5)
  
   ContainerHold.Name = "ContainerHold"
   ContainerHold.Parent = MainFrame
   
   MakeDraggable(TitleFrame, MainFrame)
   
   
  
   local Tabs = {}
   function Tabs:Tab(text, img)
      local Tab = Instance.new("TextButton")
      local Title = Instance.new("TextLabel")
      local TitleImage = Instance.new("ImageLabel")
      local TitleImageUIGradient = Instance.new("UIGradient")
      local UIGradient = Instance.new('UIGradient')
      
      Tab.Name = "Tab"
      Tab.Parent = TabHolder
      Tab.BackgroundColor3 = Color3.fromRGB(255,255,255)
      Tab.Size = UDim2.new(0, 150, 0, 35)
      Tab.AutoButtonColor = false
      Tab.Font = Enum.Font.DenkOne
      Tab.Text = ""
      Tab.TextColor3 = Color3.fromRGB(0, 0, 0)
      Tab.TextSize = 15.000
      Tab.BackgroundTransparency = 1
  
      UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 70, 70)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 205, 205))}
      UIGradient.Parent = Tab
      
      TitleImage.Name = "TitleImage"
      TitleImage.Parent = Tab
      TitleImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      TitleImage.BackgroundTransparency = 1.000
      TitleImage.Position = UDim2.new(0, 5, 0, 0)
      TitleImage.Size = UDim2.new(0, 35, 0, 35)
      TitleImage.Image = img or "rbxassetid://6026568229"
      TitleImage.ImageColor3 = Color3.fromRGB(255, 255, 255)
      
      TitleImageUIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 70, 70)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 200, 200))}
      TitleImageUIGradient.Name = "TitleImageUIGradient"
      TitleImageUIGradient.Parent = TitleImage
    
      Title.Name = "Title"
      Title.Parent = Tab
      Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Title.BackgroundTransparency = 1.000
      Title.Position = UDim2.new(0, 45, 0, 0)
      Title.Size = UDim2.new(0, 140, 0, 35)
      Title.Font = Enum.Font.DenkOne
      Title.Text = text
      Title.TextColor3 = Color3.fromRGB(255, 255, 255)
      Title.TextSize = 23.000
      Title.TextXAlignment = Enum.TextXAlignment.Left
      Title.TextYAlignment = Enum.TextYAlignment.Center
  
      local Container = Instance.new("ScrollingFrame")
      local ContainerLayout = Instance.new("UIListLayout")

      Container.Name = "Container"
      Container.Parent = ContainerHold
      Container.Active = true
      Container.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
      Container.BackgroundTransparency = 0
      Container.Position = UDim2.new(0, 156, 0, 45)
      Container.Size = UDim2.new(0, 391, 0, 302)
      Container.ScrollBarThickness = 2
      Container.CanvasSize = UDim2.new(0, 0, 0, 0)
      Container.Visible = false
      Container.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
  
      ContainerLayout.Name = "ContainerLayout"
      ContainerLayout.Parent = Container
      ContainerLayout.SortOrder = Enum.SortOrder.LayoutOrder
      ContainerLayout.Padding = UDim.new(0, 5)
      
      --Script--
      
      if FirstTab == false then
         FirstTab = true
         Tab.BackgroundTransparency = 0
         Container.Visible = true
      end
      Tab.MouseButton1Click:Connect(
         function()
            for i, v in next, ContainerHold:GetChildren() do
               if v.Name == "Container" then
                  v.Visible = false
               end
            end
  
            for i, v in next, TabHolder:GetChildren() do
               if v.ClassName == "TextButton" then
                  TweenService:Create(
                     v,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {BackgroundTransparency = 1}
                  ):Play()
                  TweenService:Create(
                     Tab,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {BackgroundTransparency = 0}
                  ):Play()
               end
            end
            Container.Visible = true
         end
      )
      
      
      local ContainerItems = {}
      function ContainerItems:Button(text, callback)
         local Button = Instance.new("TextButton")
         local ButtonTitle = Instance.new("TextLabel")
         local ButtonImage = Instance.new("ImageLabel")
         local ButtonCorner = Instance.new("UICorner")
         local ButtonImageUIGradient = Instance.new("UIGradient")
  
         Button.Name = "Button"
         Button.Parent = Container
         Button.BackgroundColor3 = _G.BackgroundTheme
         Button.Size = _G.SizeTheme
         Button.AutoButtonColor = false
         Button.Font = Enum.Font.Gotham
         Button.TextColor3 = Color3.fromRGB(255, 255, 255)
         Button.TextSize = 14.000
         Button.Text = ""
         
         ButtonTitle.Name = "ButtonTitle"
         ButtonTitle.Parent = Button
         ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         ButtonTitle.BackgroundTransparency = 1.000
         ButtonTitle.Position = UDim2.new(0.0198511165, 0, 0, 0)
         ButtonTitle.Size = _G.SizeTitle
         ButtonTitle.Font = Enum.Font.Gotham
         ButtonTitle.Text = text
         ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
         ButtonTitle.TextSize = 15.000
         ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
         
         ButtonImage.Name = "ButtonImage"
         ButtonImage.Parent = Button
         ButtonImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         ButtonImage.BackgroundTransparency = 1.000
         ButtonImage.BorderSizePixel = 0
         ButtonImage.Position = UDim2.new(0, 350, 0, 5)
         ButtonImage.Size = UDim2.new(0, 27, 0, 27)
         ButtonImage.Image = "rbxassetid://7839505809"
         ButtonImage.ImageColor3 = Color3.fromRGB(255, 255, 255)
         
         ButtonImageUIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 80, 80)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
         ButtonImageUIGradient.Parent = ButtonImage
         
         --Script--
         
         Button.MouseEnter:Connect(
            function()
               TweenService:Create(
                  Button,
                  TweenInfo.new(.2, Enum.EasingStyle.Quad),
                  {BackgroundColor3 = Color3.fromRGB(45, 45, 45)}
               ):Play()
           TweenService:Create(ButtonTitle, TweenInfo.new(.2, Enum.EasingStyle.Quad), {TextSize = 17}):Play()
           TweenService:Create(
                     ButtonImage,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {Rotation = 180}
                  ):Play()
            end
         )
         Button.MouseLeave:Connect(
            function()
               TweenService:Create(
                  Button,
                  TweenInfo.new(.2, Enum.EasingStyle.Quad),
                  {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}
               ):Play()
           TweenService:Create(ButtonTitle, TweenInfo.new(.2, Enum.EasingStyle.Quad), {TextSize = 14}):Play()
           TweenService:Create(
                     ButtonImage,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {Rotation = 0}
                  ):Play()
            end
         )
         
         
         Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
  
         Button.MouseButton1Click:Connect(
            function()
               pcall(callback)
               Button.TextSize = 0
               TweenService:Create(Button, TweenInfo.new(.2, Enum.EasingStyle.Quad), {TextSize = 17}):Play()
               wait(.2)
               TweenService:Create(Button, TweenInfo.new(.2, Enum.EasingStyle.Quad), {TextSize = 14}):Play()
               
            end
         )
         
      end
      
      
      function ContainerItems:Toggle(text,Default,callback)
         local Toggled = Default or false
         local ValueToggle = ValueTogglea or false
         local Toggle = Instance.new("TextButton")
         local ToggleCorner = Instance.new("UICorner")
         local Title = Instance.new("TextLabel")
         local ToggleFrame = Instance.new("Frame")
         local ToggleFrameCorner = Instance.new("UICorner")
         local ToggleFrameRainbow = Instance.new("Frame")
         local ToggleFrameRainbowCorner = Instance.new("UICorner")
         local ToggleDot = Instance.new("Frame")
         local ToggleDotCorner = Instance.new("UICorner")
         local UIGradient_2 = Instance.new('UIGradient')
         
         Toggle.Name = "Toggle"
         Toggle.Parent = Container
         Toggle.BackgroundColor3 = _G.BackgroundTheme
         Toggle.Position = UDim2.new(-0.747557044, 0, 0.729113936, 0)
         Toggle.Size = _G.SizeTheme
         Toggle.AutoButtonColor = false
         Toggle.Font = Enum.Font.Gotham
         Toggle.Text = ""
         Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
         Toggle.TextSize = 14.000
         
         Title.Name = "Title"
         Title.Parent = Toggle
         Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         Title.BackgroundTransparency = 1.000
         Title.Position = UDim2.new(0.0198511165, 0, 0, 0)
         Title.Size = _G.SizeTitle
         Title.Font = Enum.Font.Gotham
         Title.Text = text
         Title.TextColor3 = Color3.fromRGB(255, 255, 255)
         Title.TextSize = 15.000
         Title.TextXAlignment = Enum.TextXAlignment.Left
  
         ToggleFrame.Name = "ToggleFrame"
         ToggleFrame.Parent = Toggle
         ToggleFrame.BackgroundColor3 = Color3.fromRGB(22, 23, 27)
         ToggleFrame.Position = UDim2.new(0.86, 0, 0.21, 0)
         ToggleFrame.Size = UDim2.new(0, 40, 0, 18)
         
         ToggleFrameCorner.CornerRadius = UDim.new(1, 0)
         ToggleFrameCorner.Name = "ToggleFrameCorner"
         ToggleFrameCorner.Parent = ToggleFrame
  
         ToggleFrameRainbow.Name = "ToggleFrameRainbow"
         ToggleFrameRainbow.Parent = ToggleFrame
         ToggleFrameRainbow.BackgroundColor3 = Color3.fromRGB(27,27,27)
         ToggleFrameRainbow.BackgroundTransparency = 1.000
         ToggleFrameRainbow.Position = UDim2.new(-0.0198377371, 0, 0.00601506233, 0)
         ToggleFrameRainbow.Size = UDim2.new(0, 40, 0, 18)
  
         ToggleFrameRainbowCorner.CornerRadius = UDim.new(1, 0)
         ToggleFrameRainbowCorner.Name = "ToggleFrameRainbowCorner"
         ToggleFrameRainbowCorner.Parent = ToggleFrameRainbow
  
         ToggleDot.Name = "ToggleDot"
         ToggleDot.Parent = ToggleFrameRainbow
         ToggleDot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         ToggleDot.Position = UDim2.new(0, 0, 0, 0)
         ToggleDot.Size = UDim2.new(0, 18, 0, 18)
  
         UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 80, 80)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
         UIGradient_2.Parent = ToggleDot
  
         ToggleDotCorner.CornerRadius = UDim.new(1, 0)
         ToggleDotCorner.Name = "ToggleDotCorner"
         ToggleDotCorner.Parent = ToggleDot
         
         --Script--
         
      
         
  
         if Toggled == true then
          UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(160, 207, 236)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(102, 152, 255))}
  
          TweenService:Create(
             ToggleFrameRainbow,
             TweenInfo.new(.2, Enum.EasingStyle.Quad),
             {BackgroundTransparency = 0}
          ):Play()
          TweenService:Create(
             ToggleDot,
             TweenInfo.new(.2, Enum.EasingStyle.Quad),
             {Position = UDim2.new(0, 25, 0, 0)}
          ):Play()
          pcall(callback, Toggled)
       else
          ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(46, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(228, 92, 255))}
  
          TweenService:Create(
             ToggleFrameRainbow,
             TweenInfo.new(.2, Enum.EasingStyle.Quad),
             {BackgroundTransparency = 1}
          ):Play()
          TweenService:Create(
             ToggleDot,
             TweenInfo.new(.2, Enum.EasingStyle.Quad),
             {Position = UDim2.new(0, 0, 0, 0)}
          ):Play()
       end
  
         Toggle.MouseButton1Click:Connect(
            function()
               if Toggled == false then
                  UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 80, 80)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
  
                  TweenService:Create(
                     ToggleFrameRainbow,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {BackgroundTransparency = 0}
                  ):Play()
                  TweenService:Create(
                     ToggleDot,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {Position = UDim2.new(0, 25, 0, 0)}
                  ):Play()
               else
                  UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 80, 80)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 255, 255))}
  
                  TweenService:Create(
                     ToggleFrameRainbow,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {BackgroundTransparency = 1}
                  ):Play()
                  TweenService:Create(
                     ToggleDot,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {Position = UDim2.new(0, 0, 0, 0)}
                  ):Play()
               end
               Toggled = not Toggled
               pcall(callback, Toggled)
            end
         )
  
         Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
      end
      
      
      function ContainerItems:Dropdown(text, list, callback)
         local dropfunc = {}
         local DropToggled = false
         local FrameSize = 0
         local ItemCount = 0
         local Dropdown = Instance.new("TextButton")
         local Title = Instance.new("TextLabel")
         local DropdownCorner = Instance.new("UICorner")
         local Arrow = Instance.new("ImageLabel")
  
         Dropdown.Name = "Dropdown"
         Dropdown.Parent = Container
         Dropdown.BackgroundColor3 = _G.BackgroundTheme
         Dropdown.Position = UDim2.new(-0.747557044, 0, 0.729113936, 0)
         Dropdown.Size = _G.SizeTheme
         Dropdown.AutoButtonColor = false
         Dropdown.Font = Enum.Font.Gotham
         Dropdown.Text = ""
         Dropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
         Dropdown.TextSize = 15.000
  
         Title.Name = "Title"
         Title.Parent = Dropdown
         Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         Title.BackgroundTransparency = 1.000
         Title.Position = UDim2.new(0.0198511165, 0, 0, 0)
         Title.Size = _G.SizeTitle
         Title.Font = Enum.Font.Gotham
         Title.Text = text
         Title.TextColor3 = Color3.fromRGB(255, 255, 255)
         Title.TextSize = 15.000
         Title.TextXAlignment = Enum.TextXAlignment.Left
         
         Arrow.Name = "Arrow"
         Arrow.Parent = Dropdown
         Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         Arrow.BackgroundTransparency = 1.000
         Arrow.Position = UDim2.new(0.9, 0, 0.2, 0)
         Arrow.Size = UDim2.new(0, 27, 0, 27)
         Arrow.Image = "http://www.roblox.com/asset/?id=6034818372"
  
         local DropdownFrame = Instance.new("Frame")
         local DropdownFrameCorner = Instance.new("UICorner")
         local DropdownHolder = Instance.new("ScrollingFrame")
         local DropdownItemLayout = Instance.new("UIListLayout")
         local DropdownItemHolder = Instance.new("UIPadding")
  
         DropdownFrame.Name = "DropdownFrame"
         DropdownFrame.Parent = Container
         DropdownFrame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
         DropdownFrame.BorderSizePixel = 0
         DropdownFrame.Position = UDim2.new(0.334374994, 0, 0.604166687, 0)
         DropdownFrame.Size = UDim2.new(0, 391, 0, 0)
         DropdownFrame.Visible = false
  
         DropdownHolder.Name = "DropdownHolder"
         DropdownHolder.Parent = DropdownFrame
         DropdownHolder.Active = true
         DropdownHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         DropdownHolder.BackgroundTransparency = 1.000
         DropdownHolder.BorderSizePixel = 0
         DropdownHolder.Position = UDim2.new(0.0263156947, 0, 0.00326599111, 0)
         DropdownHolder.Size = UDim2.new(0, 386, 0, 0)
         DropdownHolder.ScrollBarThickness = 3
         DropdownHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
         DropdownHolder.ScrollBarImageColor3 = Color3.fromRGB(48, 48, 48)
  
         DropdownItemLayout.Name = "DropdownItemLayout"
         DropdownItemLayout.Parent = DropdownHolder
         DropdownItemLayout.SortOrder = Enum.SortOrder.LayoutOrder
         DropdownItemLayout.Padding = UDim.new(0, 5)
  
         DropdownItemHolder.Name = "DropdownItemHolder"
         DropdownItemHolder.Parent = DropdownHolder
         DropdownItemHolder.PaddingBottom = UDim.new(0, 5)
         DropdownItemHolder.PaddingTop = UDim.new(0, 5)
         
         --Script--
  
         Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
  
        
         
  
         Dropdown.MouseButton1Click:Connect(
            function()
               if DropToggled == false then
                  DropdownFrame.Visible = true
                  DropdownFrame:TweenSize(
                     UDim2.new(0, 391, 0, FrameSize),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  DropdownHolder:TweenSize(
                     UDim2.new(0, 386, 0, FrameSize),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  TweenService:Create(
                     Arrow,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {Rotation = 180}
                  ):Play()
                  repeat
                     wait()
                  until DropdownFrame.Size == UDim2.new(0, 391, 0, FrameSize)
                  Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
               else
                  DropdownFrame:TweenSize(
                     UDim2.new(0, 391, 0, 0),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  DropdownHolder:TweenSize(
                     UDim2.new(0, 386, 0, 0),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  TweenService:Create(
                     Arrow,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {Rotation = 0}
                  ):Play()
                  repeat
                     wait()
                  until DropdownFrame.Size == UDim2.new(0, 391, 0, 0)
                  DropdownFrame.Visible = false
                  Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
               end
               DropToggled = not DropToggled
            end
         )
  
         for i, v in next, list do
            ItemCount = ItemCount + 1
  
            if ItemCount == 1 then
               FrameSize = 39
            elseif ItemCount == 2 then
               FrameSize = 69
            elseif ItemCount >= 3 then
               FrameSize = 100
            end
  
            local Item = Instance.new("TextButton")
            local ItemCorner = Instance.new("UICorner")
  
            Item.Name = "Item"
            Item.Parent = DropdownHolder
            Item.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
            Item.Position = UDim2.new(0, 0, 0.0808080807, 0)
            Item.Size = UDim2.new(0, 391, 0, 24)
            Item.AutoButtonColor = false
            Item.Font = Enum.Font.Gotham
            Item.TextColor3 = Color3.fromRGB(255, 255, 255)
            Item.TextSize = 14.000
            Item.Text = v
  
            ItemCorner.Name = "ItemCorner"
            ItemCorner.Parent = Item
  
            Item.MouseEnter:Connect(
               function()
                  TweenService:Create(
                     Item,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                  ):Play()
               end
            )
            Item.MouseLeave:Connect(
               function()
                  TweenService:Create(
                     Item,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {BackgroundColor3 = Color3.fromRGB(32, 32, 32)}
                  ):Play()
               end
            )
  
            Item.MouseButton1Click:Connect(
               function()
                  Title.Text = text .. " - " .. v
                  pcall(callback, v)
                  DropToggled = false
                  DropdownFrame:TweenSize(
                     UDim2.new(0, 403, 0, 0),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  DropdownHolder:TweenSize(
                     UDim2.new(0, 386, 0, 0),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  TweenService:Create(
                     Arrow,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {Rotation = 0}
                  ):Play()
                  repeat
                     wait()
                  until DropdownFrame.Size == UDim2.new(0, 403, 0, 0)
                  DropdownFrame.Visible = false
                  Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
               end
            )
  
            DropdownHolder.CanvasSize = UDim2.new(0, 0, 0, DropdownItemLayout.AbsoluteContentSize.Y + 15)
         end
         
  
         function dropfunc:Clear()
            Title.Text = text
            FrameSize = 0
            ItemCount = 0
  
            for i,v in next, DropdownHolder:GetChildren() do
               if v.Name == "Item" then
                  v:Destroy()
               end
            end
  
            DropdownFrame:TweenSize(
               UDim2.new(0, 403, 0, 0),
               Enum.EasingDirection.Out,
               Enum.EasingStyle.Quart,
               0.1,
               true
            )
            DropdownHolder:TweenSize(
               UDim2.new(0, 386, 0, 0),
               Enum.EasingDirection.Out,
               Enum.EasingStyle.Quart,
               0.1,
               true
            )
            TweenService:Create(
               Arrow,
               TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
               {Rotation = 0}
            ):Play()
            repeat
               wait()
            until DropdownFrame.Size == UDim2.new(0, 403, 0, 0)
            DropdownFrame.Visible = false
            Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
         end
  
         function dropfunc:Add(toadd)
            ItemCount = ItemCount + 1
  
            if ItemCount == 1 then
               FrameSize = 39
            elseif ItemCount == 2 then
               FrameSize = 69
            elseif ItemCount >= 3 then
               FrameSize = 100
            end
  
            local Item = Instance.new("TextButton")
            local ItemCorner = Instance.new("UICorner")
  
            Item.Name = "Item"
            Item.Parent = DropdownHolder
            Item.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
            Item.Position = UDim2.new(0, 0, 0.0808080807, 0)
            Item.Size = UDim2.new(0, 391, 0, 24)
            Item.AutoButtonColor = false
            Item.Font = Enum.Font.Gotham
            Item.TextColor3 = Color3.fromRGB(255, 255, 255)
            Item.TextSize = 14.000
            Item.Text = toadd
  
            ItemCorner.Name = "ItemCorner"
            ItemCorner.Parent = Item
  
            Item.MouseEnter:Connect(
               function()
                  TweenService:Create(
                     Item,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
                  ):Play()
               end
            )
            Item.MouseLeave:Connect(
               function()
                  TweenService:Create(
                     Item,
                     TweenInfo.new(.2, Enum.EasingStyle.Quad),
                     {BackgroundColor3 = Color3.fromRGB(32, 32, 32)}
                  ):Play()
               end
            )
  
            Item.MouseButton1Click:Connect(
               function()
                  Title.Text = text .. " - " .. toadd
                  pcall(callback, toadd)
                  DropToggled = false
                  DropdownFrame:TweenSize(
                     UDim2.new(0, 391, 0, 0),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  DropdownHolder:TweenSize(
                     UDim2.new(0, 386, 0, 0),
                     Enum.EasingDirection.Out,
                     Enum.EasingStyle.Quart,
                     0.1,
                     true
                  )
                  TweenService:Create(
                     Arrow,
                     TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                     {Rotation = 0}
                  ):Play()
                  repeat
                     wait()
                  until DropdownFrame.Size == UDim2.new(0, 391, 0, 0)
                  DropdownFrame.Visible = false
                  Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
               end
            )
  
            DropdownHolder.CanvasSize = UDim2.new(0, 0, 0, DropdownItemLayout.AbsoluteContentSize.Y + 15)
         end
  
         return dropfunc
      end
      
      
      function ContainerItems:Label(text)
         local labelfunc = {}
         local Label = Instance.new("TextButton")
         local LabelCorner = Instance.new("UICorner")
  
         Label.Name = "Label"
         Label.Parent = Container
         Label.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
         Label.BackgroundTransparency = 0
         Label.Size = UDim2.new(0, 391, 0, 20)
         Label.AutoButtonColor = false
         Label.Font = Enum.Font.GothamBold
         Label.TextColor3 = Color3.fromRGB(255, 255, 255)
         Label.TextSize = 14.000
         Label.Text = text
         Label.TextXAlignment = Enum.TextXAlignment.Center
         
         LabelCorner.CornerRadius = UDim.new(0, 5)
         LabelCorner.Name = "LabelCorner"
         LabelCorner.Parent = Label
  
         Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
  
         function labelfunc:Refresh(tochange)
            Label.Text = tochange
         end
  
         return labelfunc
      end
      
      
      function ContainerItems:Textbox(text, disapper, callback)
         local Textbox = Instance.new("TextButton")
         local Title = Instance.new("TextLabel")
         local TextboxFrame = Instance.new("Frame")
         local TextboxFrameCorner = Instance.new("UICorner")
         local TextBox = Instance.new("TextBox")
         local TextboxCorner = Instance.new("UICorner")
  
         Textbox.Name = "Textbox"
         Textbox.Parent = Container
         Textbox.BackgroundColor3 = _G.BackgroundTheme
         Textbox.Position = UDim2.new(-0.747557044, 0, 0.729113936, 0)
         Textbox.Size = UDim2.new(0, 391, 0, 45)
         Textbox.AutoButtonColor = false
         Textbox.Font = Enum.Font.Gotham
         Textbox.Text = ""
         Textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
         Textbox.TextSize = 14.000
  
         Title.Name = "Title"
         Title.Parent = Textbox
         Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         Title.BackgroundTransparency = 1.000
         Title.Position = UDim2.new(0.0198511165, 0, 0, 0)
         Title.Size = UDim2.new(0, 391, 0, 40)
         Title.Font = Enum.Font.Gotham
         Title.Text = text
         Title.TextColor3 = Color3.fromRGB(255, 255, 255)
         Title.TextSize = 15.000
         Title.TextXAlignment = Enum.TextXAlignment.Left
  
         TextboxFrame.Name = "TextboxFrame"
         TextboxFrame.Parent = Textbox
         TextboxFrame.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
         TextboxFrame.Position = UDim2.new(0.650124013, 0, 0.16, 0)
         TextboxFrame.Size = UDim2.new(0, 125, 0, 31)
  
         TextBox.Parent = TextboxFrame
         TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         TextBox.BackgroundTransparency = 1.000
         TextBox.Size = UDim2.new(0, 125, 0, 31)
         TextBox.Font = Enum.Font.Gotham
         TextBox.Text = ""
         TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
         TextBox.TextSize = 15.000
         
         --Script--
  
         TextBox.FocusLost:Connect(
            function(ep)
               if ep then
                  if #TextBox.Text > 0 then
                     pcall(callback, TextBox.Text)
                     if disapper then
                        TextBox.Text = ""
                     end
                  end
               end
            end
         )
  
         Container.CanvasSize = UDim2.new(0, 0, 0, ContainerLayout.AbsoluteContentSize.Y)
      end
  
      function ContainerItems:Bind(Title, keybind_options, callback)
         local keybind_data = {}
  
         local Keybind = Instance.new("TextButton")
         local Title = Instance.new("TextLabel")
         local KeybindFrame = Instance.new("Frame")
         local KeybindFrameCorner = Instance.new("UICorner")
         local TextButton = Instance.new("TextButton")
         local KeybindCorner = Instance.new("UICorner")
         local ContainerLayout = Instance.new("UIListLayout")
  
  
         Keybind.Name = "Keybind"
         Keybind.Parent = Container
         Keybind.BackgroundColor3 = _G.BackgroundTheme
         Keybind.Position = UDim2.new(-0.747557044, 0, 0.729113936, 0)
         Keybind.Size = UDim2.new(0, 391, 0, 45)
         Keybind.AutoButtonColor = false
         Keybind.Font = Enum.Font.Gotham
         Keybind.Text = ""
         Keybind.TextColor3 = Color3.fromRGB(255, 255, 255)
         Keybind.TextSize = 14.000
  
         Title.Name = "Title"
         Title.Parent = Keybind
         Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         Title.BackgroundTransparency = 1.000
         Title.Position = UDim2.new(0.0198511165, 0, 0, 0)
         Title.Size = UDim2.new(0, 391, 0, 45)
         Title.Font = Enum.Font.Gotham
         Title.Text = "Keybind"
         Title.TextColor3 = Color3.fromRGB(255, 255, 255)
         Title.TextSize = 15.000
         Title.TextXAlignment = Enum.TextXAlignment.Left
  
         KeybindFrame.Name = "KeybindFrame"
         KeybindFrame.Parent = Keybind
         KeybindFrame.BackgroundColor3 = Color3.fromRGB(56, 56, 56)
         KeybindFrame.Position = UDim2.new(0.650124013, 0, 0.159999996, 0)
         KeybindFrame.Size = UDim2.new(0, 125, 0, 31)
  
         
  
         TextButton.Parent = KeybindFrame
         TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
         TextButton.BackgroundTransparency = 1.000
         TextButton.Size = UDim2.new(0, 125, 0, 31)
         TextButton.Font = Enum.Font.Gotham
         TextButton.Text = "Keybind"
         TextButton.TextColor3 = Color3.fromRGB(178, 178, 178)
         TextButton.TextSize = 15.000
  
         
  
         ContainerLayout.Name = "ContainerLayout"
         ContainerLayout.Parent = Container
         ContainerLayout.SortOrder = Enum.SortOrder.LayoutOrder
         ContainerLayout.Padding = UDim.new(0, 15)
  
         local UIS = game:GetService('UserInputService')
  
  
         keybind_name = tostring(keybind_name or "New Keybind")
         callback = typeof(callback) == "function" and callback or function()end
         keybind_options = typeof(keybind_options) == "table" and keybind_options or {}
         keybind_options = {
            ["standard"] = keybind_options.standard or Enum.KeyCode.RightShift,
         }
  
  
  
         callback = typeof(callback) == "function" and callback or function()end
         keybind_options = typeof(keybind_options) == "table" and keybind_options or {}
         keybind_options = {
            ["standard"] = keybind_options.standard or Enum.KeyCode.RightShift,
         }
  
         local shortkeys = { -- thanks to stroketon for helping me out with this
            RightControl = 'RightCtrl',
            LeftControl = 'LeftCtrl',
            LeftShift = 'LShift',
            RightShift = 'RShift',
            MouseButton1 = "Mouse1",
            MouseButton2 = "Mouse2"
         }
         local checks = {
            binding = false,
  
         }
         function keybind_data:SetKeybind(Keybind)
            local key = shortkeys[Keybind.Name] or Keybind.Name
            TextButton.Text = key
            keybind = Keybind
         end
  
         UIS.InputBegan:Connect(function(a, b)
            if checks.binding then
               spawn(function()
                  wait()
                  checks.binding = false
               end)
               return
            end
            if a.KeyCode == keybind and not b then
               pcall(callback, keybind)
            end
         end)
  
         keybind_data:SetKeybind(keybind_options.standard)
  
         TextButton.MouseButton1Click:Connect(function()
            if checks.binding then return end
            TextButton.Text = "..."
            checks.binding = true
            local a, b = UIS.InputBegan:Wait()
            keybind_data:SetKeybind(a.KeyCode)
         end)
         return keybind_data
      end
      
      return ContainerItems
   end
   return Tabs
  end

---THEMES---
_G.BackgroundTheme = Color3.fromRGB(60, 60, 60)
_G.SizeTheme = UDim2.new(0, 391, 0, 35)
_G.SizeTitle = UDim2.new(0, 391, 0, 35)
